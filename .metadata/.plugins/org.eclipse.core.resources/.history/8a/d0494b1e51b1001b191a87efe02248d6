package com.com.food.service.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.com.food.model.MyFoodsVO;
import com.com.food.model.MyfoodsDTO;
import com.com.food.service.DBConnection;
import com.com.food.service.FoodService;

public class FoodImplV1 implements FoodService {

	private Connection dbConn ; 
	
	public FoodImplV1() {
		dbConn = DBConnection.getDBConnection();
	}
	

	public List<MyfoodsDTO> selectAll() {
		// TODO 기록한 모든 리스트를 조회하는 메소드
		
		String sql = "SELECT * FROM view_일일섭취량";
		PreparedStatement pStr = null ;
		
		
		try {
			pStr = dbConn.prepareStatement(sql);
			
			ResultSet rSet = pStr.executeQuery();
			
			List<MyfoodsDTO> mfList = new ArrayList<MyfoodsDTO>();
			
			while(rSet.next()) {
				MyfoodsDTO mfDTO = new MyfoodsDTO();
				
				mfDTO.setMf_seq(rSet.getInt("일련번호"));
				mfDTO.setMf_date(rSet.getString("날짜"));
				mfDTO.setMf_code(rSet.getString("식품코드"));
				mfDTO.setMf_name(rSet.getString("식품명"));
				mfDTO.setMf_eat(rSet.getInt("섭취량"));
				mfDTO.setMf_kcal(rSet.getInt("칼로리"));
				mfDTO.setMf_protein(rSet.getInt("단백질"));
				mfDTO.setMf_fat(rSet.getInt("지방"));
				mfDTO.setMf_car(rSet.getInt("탄수화물"));
				mfDTO.setMf_sugar(rSet.getInt("총당류"));
				
				mfList.add(mfDTO);
				
			}
			
			rSet.close();
			pStr.close();
			return mfList;
			
			
		} catch (SQLException e) {
			System.out.println("DB 연결 실패");
		}
		
		
		return null;
	}

	@Override
	public List<MyfoodsDTO> selectDate(String startDate, String lastDate) {
		// TODO 기록한 리스트 중 원하는 날짜 조회
		return null;
	}

	@Override
	public int insert(MyFoodsVO myfoodsVO) {
		// TODO 섭취량 입력 메소드
		
		
		String sql = " INSERT INTO tbl_myfoods";
		sql += "(mf_seq, mf_date, mf_code, mf_eat)";
		sql += "VALUES (?, ?, ?, ?)";
		
		try {
			PreparedStatement pStr = dbConn.prepareStatement(sql);
			
			pStr.setString(1, "seq_myFoods.nextval");
			pStr.setString(2, myfoodsVO.getMf_date());
			pStr.setString(3, myfoodsVO.getMf_code());
			pStr.setInt(4, myfoodsVO.getMf_eat());
			pStr.executeUpdate();
			
			pStr.close();
			
			int result = pStr.executeUpdate();
			pStr.close();
			return result;
			
			
		} catch (SQLException e) {
			System.out.println("DB 입력 실패");
		}
		
		return 0 ;
		
	}
	
	
	
	
	
	
	//구현안함
	@Override
	public void delete() {
	}
	
	//구현안함
	@Override
	public void update() {
	}

}
